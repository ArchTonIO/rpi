#!/usr/bin/env perl6

sub rebase($name, $val, $radix) {
	my $str = "";
	my $v = $val;
	my @arr = ('0' .. '9');
	@arr.push('A');
	@arr.push('B');
	@arr.push('C');
	@arr.push('D');
	@arr.push('E');
	@arr.push('F');
	repeat {
		my $dig = $v mod $radix;
		my $c = @arr[$dig];
		$str = $c ~ $str;
		$v = $v div $radix;
	} until $v == 0;
	return $name ~ ": " ~$str;
}


sub reval(@ords, $upper, $radix) {
	my $val = 0;
	for @ords -> $c { 
		if '0'.ord <= $c <= $upper.ord { 
			$val = $val * $radix + $c - '0'.ord;
		}
	}
	return $val;
}

sub MAIN ($type, $num) {
	my $txt = lc($num);
	my @ords = $txt.ords();

	# convert to decimal
	my $val = 0;
	given $type {
		when "hex"  { 
			for @ords -> $c { 
				if 'a'.ord <= $c <= 'f'.ord { $val = $val * 16 + $c - 'a'.ord + 10; }
				if '0'.ord <= $c <= '9'.ord { $val = $val * 16 + $c - '0'.ord;}
			}
		}
		when "dec" { $val = reval(@ords, '9', 10); }
		when "oct" { $val = reval(@ords, '7', 8); }
		when "bin" { $val = reval(@ords, '1', 2); }

	}
	#say "val = $val";

	# convert to others
	say rebase("BIN", $val, 2);
	say rebase("OCT", $val, 8);
	say rebase("DEC", $val, 10);
	say rebase("HEX", $val, 16);


}
